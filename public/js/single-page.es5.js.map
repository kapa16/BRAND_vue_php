{"version":3,"sources":["single-page.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","ReviewsControl","source","countReviewOnPage","arguments","undefined","container","form","this","reviews","pagination","_init","value","_this","_renderForm","fetch","then","result","json","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","review","push","err","return","Pagination","_getCountReviewParts","$","on","paginationItemSelector","evt","changePagination","_renderReviews","Math","ceil","_this2","$labelUser","$userId","append","$text","id","class","name","cols","rows","placeholder","$btn","submit","_onFormSubmit","_this3","text","reviewsToShow","firstReviewToShow","currentPart","lastReviewToShow","slice","forEach","_renderReview","countParts","render","_this4","$reviewWrap","concat","$reviewRating","_getReviewRatingElement","$userName","author","$reviewText","$content","$control","$deleteBtn","click","_onDeleteClick","approved","addClass","$approveBtn","_onApproveClick","prependTo","targetEl","closest","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_getReviewWrap","reviewId","dataset","_findReview","remove","splice","indexOf","ids","map","obj","max","apply","newReview","_getLastReviewId","val","preventDefault","validateForm","alert","_addReview","_checkField","selector","Carousel","containerSelector","_addHandlers","_this5","_onControlClick","direction","hasClass","_changeSlide","$currentElement","$carouselElements","currentIndex","index","lastElementIndex","nextIndex","_getNextElementIndex","hide","eq","show","SelectColor","colorItems","containerId","currenColor","color","$listWrap","_this6","_createList","toggle","_onChooseItem","_createMainElement","_setChosenItem","_this7","item","$colorExample","css","appendTo","find","colorName","element","$paginationWrap","$paginationContainer","$paginationPart","document","ready"],"mappings":"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","file":"single-page.es5.js","sourcesContent":["class ReviewsControl {\r\n  constructor(source, countReviewOnPage = 5, container = '#reviews-container', form = '#singlePage-form') {\r\n    this.source = source;\r\n    this.container = container;\r\n    this.form = form;\r\n    this.reviews = [];\r\n    this.countReviewOnPage = countReviewOnPage;\r\n    this.pagination = Object;\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this._renderForm();\r\n    fetch(this.source)\r\n      .then(result => result.json())\r\n      .then(data => {\r\n        for (const review of data) {\r\n          this.reviews.push(review);\r\n        }\r\n        if (this.countReviewOnPage) {\r\n          this.pagination = new Pagination(this._getCountReviewParts(), this.container);\r\n          $(this.container)\r\n            .on('click', this.pagination.paginationItemSelector, evt => {\r\n              this.pagination.changePagination(evt);\r\n              this._renderReviews();\r\n            });\r\n        }\r\n        this._renderReviews();\r\n      });\r\n  }\r\n\r\n  _getCountReviewParts() {\r\n    return Math.ceil(this.reviews.length / this.countReviewOnPage);\r\n  }\r\n\r\n  _renderForm() {\r\n    const $labelUser = $('<label class=\"form-elements\" for=\"userName\">Введите имя</label>');\r\n    const $userId = $('<input class=\"form-elements\" type=\"text\" name=\"userName\" id=\"userName\">');\r\n    $labelUser.append($userId);\r\n\r\n    const $text = $('<textarea/>', {\r\n      id: 'reviewText',\r\n      class: \"form-elements\",\r\n      name: \"singlePage\",\r\n      cols: \"30\",\r\n      rows: \"10\",\r\n      placeholder: \"Напишите отзыв\"\r\n    });\r\n    const $btn = $('<button class=\"form-elements\" type=\"submit\">Отправить</button>');\r\n\r\n    $(this.form)\r\n      .append($labelUser)\r\n      .append($text)\r\n      .append($btn)\r\n      .submit(evt => this._onFormSubmit(evt));\r\n  }\r\n\r\n  _renderReviews() {\r\n    $(this.container).text('');\r\n    let reviewsToShow = [];\r\n    if (this.countReviewOnPage) {\r\n      const firstReviewToShow = this.pagination.currentPart * this.countReviewOnPage;\r\n      let lastReviewToShow = firstReviewToShow + this.countReviewOnPage;\r\n      reviewsToShow = this.reviews.slice(firstReviewToShow, lastReviewToShow);\r\n    } else {\r\n      reviewsToShow = this.reviews.slice(0);\r\n    }\r\n    reviewsToShow.forEach(review => this._renderReview(review));\r\n\r\n    if (this._getCountReviewParts()) {\r\n      this.pagination.countParts = this._getCountReviewParts();\r\n      this.pagination.render();\r\n    }\r\n  }\r\n\r\n  _renderReview(review) {\r\n    const $reviewWrap = $(`<div class=\"review\" data-id=\"${review.id}\"></div>`);\r\n    const $reviewRating = this._getReviewRatingElement();\r\n\r\n    const $userName = $(`<p class=\"review__user  brand-style\">${review.author}</p>`);\r\n    const $reviewText = $(`<p class=\"review__text\">${review.text}</p>`);\r\n    const $content = $('<div class=\"review__content\"></div>');\r\n    $content\r\n      .append($userName)\r\n      .append($reviewText);\r\n\r\n    const $control = $('<div class=\"review__control\"></div>');\r\n\r\n    const $deleteBtn = $(`<div class=\"fas fa-times-circle delete-product\" data-id=\"${review.id}\"></div>`);\r\n    $deleteBtn.click(evt => this._onDeleteClick(evt));\r\n    $control.append($deleteBtn);\r\n\r\n    if (review.approved) {\r\n      $reviewWrap.addClass('approved');\r\n    } else {\r\n      const $approveBtn = $(`<div class=\"button-black review__btn\" data-id=\"${review.id}\">Approve</div>`);\r\n      $approveBtn.click(evt => this._onApproveClick(evt));\r\n      $control.append($approveBtn);\r\n    }\r\n\r\n    $reviewWrap\r\n      .append($reviewRating)\r\n      .append($content)\r\n      .append($control)\r\n      .prependTo($(this.container));\r\n  }\r\n\r\n  _getReviewRatingElement() {\r\n    const $reviewRating = $('<div class=\"review__rating\"></div>');\r\n    for (let i = 0; i < 5; i++) {\r\n      $reviewRating.append('<i class=\"fas fa-star rating-star\"></i>');\r\n    }\r\n    return $reviewRating;\r\n  }\r\n\r\n  _getReviewWrap(targetEl) {\r\n    return $(targetEl)\r\n      .closest('.singlePage');\r\n  }\r\n\r\n  _findReview(id) {\r\n    for (const review of this.reviews) {\r\n      if (review.id === +id) {\r\n        return review;\r\n      }\r\n    }\r\n  }\r\n\r\n  _onApproveClick(evt) {\r\n    this._getReviewWrap(evt.target).addClass('approved')\r\n    const reviewId = evt.target.dataset.id;\r\n\r\n    this._findReview(reviewId).approved = true;\r\n\r\n    $(evt.target).remove();\r\n  }\r\n\r\n  _onDeleteClick(evt) {\r\n    const review = this._findReview(evt.target.dataset.id);\r\n    this.reviews.splice(this.reviews.indexOf(review), 1);\r\n    this._renderReviews();\r\n    // this._getReviewWrap(evt.target).remove();\r\n  }\r\n\r\n  _getLastReviewId() {\r\n    const ids = this.reviews.map(obj => obj.id);\r\n    return Math.max(...ids) + 1;\r\n  }\r\n\r\n  _addReview() {\r\n    const newReview = {\r\n      id: this._getLastReviewId(),\r\n      author: $('#userName').val(),\r\n      text: $('#reviewText').val()\r\n    };\r\n    this.reviews.push(newReview);\r\n    this._renderReviews();\r\n  }\r\n\r\n  _onFormSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!this.validateForm()) {\r\n      alert('Необходимо заполнить форму');\r\n    }\r\n    this._addReview();\r\n    $('#userName').val('');\r\n    $('#reviewText').val('');\r\n  }\r\n\r\n  validateForm() {\r\n    return this._checkField('#userName') && this._checkField('#reviewText');\r\n  }\r\n\r\n  _checkField(selector) {\r\n    return $(selector).val().length !== 0;\r\n  }\r\n}\r\nclass Carousel {\r\n  /**\r\n   * Конструктор класса карусели\r\n   * @param {String} containerSelector - строка с селектором класса контейнера\r\n   */\r\n  constructor(containerSelector = '.carousel') {\r\n    this.containerSelector = containerSelector;\r\n    this._init();\r\n  }\r\n\r\n  /**\r\n   * Инициализация\r\n   * @private\r\n   */\r\n  _init() {\r\n    this._addHandlers();\r\n  }\r\n\r\n  /**\r\n   * Добавление слушателя событий нажатия на кнопки смены изображений\r\n   * @private\r\n   */\r\n  _addHandlers() {\r\n    $(this.containerSelector).on('click', '.carousel__control', evt => this._onControlClick(evt))\r\n  }\r\n\r\n  /**\r\n   * Обработка нажатий на кнопки смены изображений\r\n   * @param {Event} evt - событие нажатия на кнопку\r\n   * @private\r\n   */\r\n  _onControlClick(evt) {\r\n    let direction = 1;\r\n    if ($(evt.target).closest('.carousel__control').hasClass('carousel__prev')) {\r\n      direction = -1;\r\n    }\r\n    this._changeSlide(direction);\r\n  }\r\n\r\n  /**\r\n   * Меняет изображение в переданном направлении\r\n   * @param {Number} direction - направление смены изображения\r\n   * @private\r\n   */\r\n  _changeSlide(direction) {\r\n    const $currentElement = $('.carousel__block:visible');\r\n    const $carouselElements = $('.carousel__block');\r\n\r\n    const currentIndex = $currentElement.index();\r\n    const lastElementIndex = $carouselElements.length - 1;\r\n    const nextIndex = this._getNextElementIndex(direction, currentIndex, lastElementIndex);\r\n\r\n    $currentElement.hide();\r\n    $carouselElements.eq(nextIndex).show();\r\n  }\r\n\r\n  /**\r\n   * Получает индекс следующего элемента карусели, исходя из направления смены элементов\r\n   * @param {Number} direction - направление смены\r\n   * @param {Number} currentIndex - индекс текущего видимого элемента\r\n   * @param {Number} lastElementIndex - индекс последнего элемента в коллекции\r\n   * @returns {Number} - индекс следующего элемента\r\n   * @private\r\n   */\r\n  _getNextElementIndex(direction, currentIndex, lastElementIndex) {\r\n    let nextIndex = currentIndex + direction;\r\n    if (nextIndex < 0) {\r\n      nextIndex = lastElementIndex;\r\n    } else if (nextIndex > lastElementIndex) {\r\n      nextIndex = 0;\r\n    }\r\n    return nextIndex;\r\n  }\r\n}\r\nclass SelectColor {\r\n  constructor(colorItems, containerId = '#color') {\r\n    this.colorItems = colorItems;\r\n    this.containerId = containerId;\r\n    this.currenColor = {name: 'no color', color: 'rgba(0,0,0,0)'};\r\n    this.$listWrap = $('<ul/>');\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    if (this.colorItems.length) {\r\n      this.currenColor = this.colorItems[0];\r\n      this._createList();\r\n      $(this.containerId).click(() => this.$listWrap.toggle());\r\n      $(this.containerId).on('click', '.select__item', evt => this._onChooseItem(evt))\r\n    }\r\n    this._createMainElement();\r\n    this._setChosenItem();\r\n  }\r\n\r\n  _createMainElement() {\r\n    $(this.containerId)\r\n      .append($('<span class=\"color-example color-select\"></span>'))\r\n      .append(`<span class=\"color-name\"></span>`)\r\n      .append('<i class=\"fas fa-angle-down icon-drop-list\"></i>');\r\n  }\r\n\r\n  _createList() {\r\n    this.$listWrap = $('<ul class=\"select__items\">');\r\n    this.colorItems.forEach((item) => {\r\n      const $colorExample = $('<span class=\"color-example\"></span>').css('background', item.color);\r\n      this.$listWrap\r\n        .append($(`<li class=\"select__item\">${item.name}</li>`)\r\n          .append($colorExample));\r\n    });\r\n    this.$listWrap\r\n      .hide()\r\n      .appendTo($(this.containerId));\r\n  }\r\n\r\n  _setChosenItem() {\r\n    $(this.containerId)\r\n      .find('.color-select')\r\n        .css('background', this.currenColor.color);\r\n    $(this.containerId)\r\n      .find('.color-name')\r\n      .text(this.currenColor.name);\r\n  }\r\n\r\n  _onChooseItem(evt){\r\n    const colorName = $(evt.target).text();\r\n    this.currenColor = this.colorItems.find(element => element.name === colorName);\r\n    this._setChosenItem();\r\n  }\r\n}\r\nclass Pagination {\r\n  constructor(countParts, container) {\r\n    this.countParts = countParts;\r\n    this.container = container;\r\n    this.currentPart = 0;\r\n    this.paginationItemSelector = '.pagination-link';\r\n  }\r\n\r\n  render(){\r\n    const $paginationWrap = $('<div class=\"pagination-wrap\"></div>');\r\n    const $paginationContainer = $('<div class=\"pagination\"></div>');\r\n    $paginationContainer\r\n      .append(`<a href=\"#\" class=\"pagination-link pagination-link-prev\"></a>`);\r\n    for (let i = 0; i < this.countParts; i++) {\r\n      const $paginationPart = $(`<a href=\"#\" class=\"pagination-link\">${i + 1}</a>`);\r\n      if (this.currentPart === i) {\r\n        $paginationPart.addClass('pagination-link-active');\r\n      }\r\n      $paginationContainer.append($paginationPart);\r\n    }\r\n    $paginationContainer\r\n      .append('<a href=\"#\" class=\"pagination-link pagination-link-next\"></a>')\r\n      .appendTo($paginationWrap\r\n        .appendTo($(this.container)));\r\n  }\r\n\r\n  changePagination(evt) {\r\n    evt.preventDefault();\r\n    if ($(evt.target).hasClass('pagination-link-prev')) {\r\n      if (--this.currentPart < 0) {\r\n        this.currentPart = 0;\r\n      }\r\n    } else if ($(evt.target).hasClass('pagination-link-next')) {\r\n      if (++this.currentPart > this.countParts - 1) {\r\n        this.currentPart = this.countParts - 1;\r\n      }\r\n    } else {\r\n      this.currentPart = +$(evt.target).text() - 1;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n$(document).ready(() => {\r\n  const reviews = new ReviewsControl('json/reviews.json');\r\n\r\n  const carousel = new Carousel();\r\n\r\n  const selectColor = new SelectColor([\r\n    {name: 'red', color: 'red'},\r\n    {name: 'blue', color: 'blue'},\r\n    {name: 'green', color: '#98FB98'}\r\n  ]);\r\n\r\n});"]}